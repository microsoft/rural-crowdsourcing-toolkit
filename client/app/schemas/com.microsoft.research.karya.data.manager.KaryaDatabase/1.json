{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "f8d9049a15bb96969096f50d60bd15f8",
    "entities": [
      {
        "tableName": "scenario",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `name` TEXT NOT NULL, `full_name` TEXT NOT NULL, `description` TEXT NOT NULL, `task_params` TEXT NOT NULL, `assignment_granularity` TEXT NOT NULL, `group_assignment_order` TEXT NOT NULL, `microtask_assignment_order` TEXT NOT NULL, `synchronous_validation` INTEGER NOT NULL, `enabled` INTEGER NOT NULL, `skills` TEXT NOT NULL, `params` TEXT NOT NULL, `created_at` TEXT NOT NULL, `last_updated_at` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "full_name",
            "columnName": "full_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "task_params",
            "columnName": "task_params",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "assignment_granularity",
            "columnName": "assignment_granularity",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "group_assignment_order",
            "columnName": "group_assignment_order",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "microtask_assignment_order",
            "columnName": "microtask_assignment_order",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "synchronous_validation",
            "columnName": "synchronous_validation",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "enabled",
            "columnName": "enabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "skills",
            "columnName": "skills",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "params",
            "columnName": "params",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "created_at",
            "columnName": "created_at",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "last_updated_at",
            "columnName": "last_updated_at",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "worker",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `accessCode` TEXT NOT NULL, `language` TEXT NOT NULL, `yob` TEXT, `authType` TEXT, `email` TEXT, `fullName` TEXT, `gender` TEXT, `idToken` TEXT, `authId` TEXT, `params` TEXT, `phoneNumber` TEXT, `profilePicturePath` TEXT, `username` TEXT, `isConsentProvided` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "accessCode",
            "columnName": "accessCode",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "language",
            "columnName": "language",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "yob",
            "columnName": "yob",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "authType",
            "columnName": "authType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fullName",
            "columnName": "fullName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "gender",
            "columnName": "gender",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "idToken",
            "columnName": "idToken",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "authId",
            "columnName": "authId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "params",
            "columnName": "params",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "phoneNumber",
            "columnName": "phoneNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "profilePicturePath",
            "columnName": "profilePicturePath",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isConsentProvided",
            "columnName": "isConsentProvided",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "karya_file",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `local_id` TEXT NOT NULL, `box_id` INTEGER, `container_name` TEXT NOT NULL, `name` TEXT NOT NULL, `url` TEXT, `creator` TEXT NOT NULL, `worker_id` TEXT, `algorithm` TEXT NOT NULL, `checksum` TEXT NOT NULL, `in_box` INTEGER NOT NULL, `in_server` INTEGER NOT NULL, `created_at` TEXT NOT NULL, `last_updated_at` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "local_id",
            "columnName": "local_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "box_id",
            "columnName": "box_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "container_name",
            "columnName": "container_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "creator",
            "columnName": "creator",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "worker_id",
            "columnName": "worker_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "algorithm",
            "columnName": "algorithm",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "checksum",
            "columnName": "checksum",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "in_box",
            "columnName": "in_box",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "in_server",
            "columnName": "in_server",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "created_at",
            "columnName": "created_at",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "last_updated_at",
            "columnName": "last_updated_at",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "task",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `language_code` TEXT NOT NULL, `scenario_name` TEXT NOT NULL, `name` TEXT NOT NULL, `description` TEXT NOT NULL, `display_name` TEXT NOT NULL, `params` TEXT NOT NULL, `deadline` TEXT, `assignment_granularity` TEXT NOT NULL, `group_assignment_order` TEXT NOT NULL, `microtask_assignment_order` TEXT NOT NULL, `status` TEXT NOT NULL, `created_at` TEXT NOT NULL, `last_updated_at` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "language_code",
            "columnName": "language_code",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "scenario_name",
            "columnName": "scenario_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "display_name",
            "columnName": "display_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "params",
            "columnName": "params",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "deadline",
            "columnName": "deadline",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "assignment_granularity",
            "columnName": "assignment_granularity",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "group_assignment_order",
            "columnName": "group_assignment_order",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "microtask_assignment_order",
            "columnName": "microtask_assignment_order",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "created_at",
            "columnName": "created_at",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "last_updated_at",
            "columnName": "last_updated_at",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "microtask",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `task_id` TEXT NOT NULL, `group_id` TEXT, `input` TEXT NOT NULL, `input_file_id` TEXT, `deadline` TEXT, `credits` REAL NOT NULL, `output` TEXT NOT NULL, `created_at` TEXT NOT NULL, `last_updated_at` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "task_id",
            "columnName": "task_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "group_id",
            "columnName": "group_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "input",
            "columnName": "input",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "input_file_id",
            "columnName": "input_file_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "deadline",
            "columnName": "deadline",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "credits",
            "columnName": "credits",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "output",
            "columnName": "output",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "created_at",
            "columnName": "created_at",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "last_updated_at",
            "columnName": "last_updated_at",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "policy",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `scenario_id` INTEGER NOT NULL, `name` TEXT NOT NULL, `description` TEXT NOT NULL, `params` TEXT NOT NULL, `created_at` TEXT NOT NULL, `last_updated_at` TEXT NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`scenario_id`) REFERENCES `scenario`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scenario_id",
            "columnName": "scenario_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "params",
            "columnName": "params",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "created_at",
            "columnName": "created_at",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "last_updated_at",
            "columnName": "last_updated_at",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_policy_scenario_id",
            "unique": false,
            "columnNames": [
              "scenario_id"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_policy_scenario_id` ON `${TABLE_NAME}` (`scenario_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "scenario",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "scenario_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "microtask_assignment",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `local_id` TEXT NOT NULL, `box_id` TEXT NOT NULL, `microtask_id` TEXT NOT NULL, `task_id` TEXT NOT NULL, `worker_id` TEXT NOT NULL, `deadline` TEXT, `status` TEXT NOT NULL, `completed_at` TEXT, `output` TEXT NOT NULL, `output_file_id` TEXT, `credits` REAL, `verified_at` TEXT, `created_at` TEXT NOT NULL, `last_updated_at` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "local_id",
            "columnName": "local_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "box_id",
            "columnName": "box_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "microtask_id",
            "columnName": "microtask_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "task_id",
            "columnName": "task_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "worker_id",
            "columnName": "worker_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "deadline",
            "columnName": "deadline",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "completed_at",
            "columnName": "completed_at",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "output",
            "columnName": "output",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "output_file_id",
            "columnName": "output_file_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "credits",
            "columnName": "credits",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "verified_at",
            "columnName": "verified_at",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "created_at",
            "columnName": "created_at",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "last_updated_at",
            "columnName": "last_updated_at",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "payout_method",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `name` TEXT NOT NULL, `description` TEXT NOT NULL, `required_info` TEXT NOT NULL, `enabled` INTEGER NOT NULL, `created_at` TEXT NOT NULL, `last_updated_at` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "required_info",
            "columnName": "required_info",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "enabled",
            "columnName": "enabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "created_at",
            "columnName": "created_at",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "last_updated_at",
            "columnName": "last_updated_at",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "payout_info",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `local_id` TEXT NOT NULL, `box_id` INTEGER NOT NULL, `worker_id` TEXT NOT NULL, `method_id` INTEGER NOT NULL, `info` TEXT NOT NULL, `status` TEXT NOT NULL, `enabled` INTEGER NOT NULL, `params` TEXT NOT NULL, `created_at` TEXT NOT NULL, `last_updated_at` TEXT NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`worker_id`) REFERENCES `worker`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION , FOREIGN KEY(`method_id`) REFERENCES `payout_method`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "local_id",
            "columnName": "local_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "box_id",
            "columnName": "box_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "worker_id",
            "columnName": "worker_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "method_id",
            "columnName": "method_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "info",
            "columnName": "info",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "enabled",
            "columnName": "enabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "params",
            "columnName": "params",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "created_at",
            "columnName": "created_at",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "last_updated_at",
            "columnName": "last_updated_at",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_payout_info_worker_id",
            "unique": false,
            "columnNames": [
              "worker_id"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_payout_info_worker_id` ON `${TABLE_NAME}` (`worker_id`)"
          },
          {
            "name": "index_payout_info_method_id",
            "unique": false,
            "columnNames": [
              "method_id"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_payout_info_method_id` ON `${TABLE_NAME}` (`method_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "worker",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "worker_id"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "payout_method",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "method_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "payment_request",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `local_id` TEXT NOT NULL, `box_id` INTEGER NOT NULL, `payout_info_id` TEXT NOT NULL, `amount` INTEGER NOT NULL, `status` TEXT NOT NULL, `reference` TEXT, `params` TEXT NOT NULL, `created_at` TEXT NOT NULL, `last_updated_at` TEXT NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`payout_info_id`) REFERENCES `payout_info`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "local_id",
            "columnName": "local_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "box_id",
            "columnName": "box_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "payout_info_id",
            "columnName": "payout_info_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "reference",
            "columnName": "reference",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "params",
            "columnName": "params",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "created_at",
            "columnName": "created_at",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "last_updated_at",
            "columnName": "last_updated_at",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_payment_request_payout_info_id",
            "unique": false,
            "columnNames": [
              "payout_info_id"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_payment_request_payout_info_id` ON `${TABLE_NAME}` (`payout_info_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "payout_info",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "payout_info_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'f8d9049a15bb96969096f50d60bd15f8')"
    ]
  }
}